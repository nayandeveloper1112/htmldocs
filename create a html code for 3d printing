<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>3D Printing Model Viewer</title>
    <style>
        body { margin: 0; }
        canvas { display: block; }
    </style>
    <!-- Include Three.js library -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/three.js/r128/three.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/three.js/r128/controls/OrbitControls.min.js"></script>
</head>
<body>
    <script>
        // Scene, camera, and renderer setup
        const scene = new THREE.Scene();
        const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);
        const renderer = new THREE.WebGLRenderer();
        renderer.setSize(window.innerWidth, window.innerHeight);
        document.body.appendChild(renderer.domElement);

        // Add ambient light
        const light = new THREE.AmbientLight(0x404040, 1); // Ambient light with some intensity
        scene.add(light);

        // Create a directional light to show 3D model details
        const dirLight = new THREE.DirectionalLight(0xffffff, 1);
        dirLight.position.set(5, 5, 5).normalize();
        scene.add(dirLight);

        // Load 3D Model (STL format)
        const loader = new THREE.STLLoader();
        loader.load('https://example.com/path/to/your/model.stl', function (geometry) {
            const material = new THREE.MeshPhongMaterial({ color: 0x0055ff });
            const mesh = new THREE.Mesh(geometry, material);
            scene.add(mesh);
            
            // Set camera position
            camera.position.z = 5;
            
            // Create a function to animate the scene
            function animate() {
                requestAnimationFrame(animate);
                mesh.rotation.x += 0.01;
                mesh.rotation.y += 0.01;
                renderer.render(scene, camera);
            }

            animate();
        });

        // OrbitControls to enable mouse interaction
        const controls = new THREE.OrbitControls(camera, renderer.domElement);
        
        // Resize the renderer on window resize
        window.addEventListener('resize', function() {
            renderer.setSize(window.innerWidth, window.innerHeight);
            camera.aspect = window.innerWidth / window.innerHeight;
            camera.updateProjectionMatrix();
        });
    </script>
</body>
</html>
